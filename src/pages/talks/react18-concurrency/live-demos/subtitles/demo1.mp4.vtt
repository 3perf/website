WEBVTT

00:00.000 --> 00:03.040
 So this is a basic note taking app.

00:03.040 --> 00:04.720
 Like, you have a list of notes.

00:04.720 --> 00:06.400
 You could click them.

00:06.400 --> 00:09.880
 You could type something into them.

00:09.880 --> 00:12.320
 Hello, Freiburg.

00:12.320 --> 00:13.320
 Am I typing this well?

00:13.320 --> 00:16.000
 No, I'm typing this terribly.

00:16.000 --> 00:20.080
 You could create a new note, and you could filter notes.

00:20.080 --> 00:24.920
 And the filtering notes is a pretty slow action.

00:24.920 --> 00:30.480
 Like, you see this spinner in the top right corner,

00:30.480 --> 00:31.640
 which is like spins forever.

00:31.640 --> 00:34.040
 This is not actually a spinner.

00:34.040 --> 00:35.200
 There's no data loading.

00:35.200 --> 00:37.340
 What this spinner shows you, because you

00:37.340 --> 00:39.960
 can't type on my keyboard, because you can't feel

00:39.960 --> 00:42.200
 when my laptop is slow, what the spinner shows you

00:42.200 --> 00:44.040
 when the page freezes.

00:44.040 --> 00:48.940
 So if I type a single letter into the filtering inputs,

00:48.940 --> 00:52.740
 you would see that the spinner freezes for a second.

00:52.740 --> 00:54.920
 Like, I type a letter, the spinner freezes.

00:54.920 --> 00:55.560
 The spinner lags.

00:55.560 --> 00:59.560
 I remove a letter, the spinner lags again.

00:59.560 --> 01:02.080
 You could use this as a visual indicator of, OK, everything's

01:02.080 --> 01:03.160
 terrible.

01:03.160 --> 01:07.880
 And yeah, so the filtering input, it's slow.

01:07.880 --> 01:10.440
 It feels slow if I'm typing into it.

01:10.440 --> 01:12.880
 Or you could see that it's slow thanks to the spinner.

01:12.880 --> 01:16.760
 But if I tried to type a bunch of letters once,

01:16.760 --> 01:20.320
 it would kind of lag.

01:20.320 --> 01:24.800
 And so, OK, so we have a performance issue.

01:24.800 --> 01:27.040
 And the first thing that I do whenever

01:27.040 --> 01:32.440
 I have a performance issue is I open Chrome DevTools.

01:32.440 --> 01:35.680
 And I try to profile that issue in the performance pane.

01:35.680 --> 01:39.320
 So let's try just that.

01:39.320 --> 01:40.760
 I'm opening Chrome DevTools.

01:40.760 --> 01:42.260
 I'm switching to the performance pane.

01:42.260 --> 01:43.760
 I'm clicking Record.

01:43.760 --> 01:45.280
 I'm reproducing my performance issue,

01:45.280 --> 01:46.800
 which is I'm typing a single letter

01:46.800 --> 01:49.960
 into this slow filter input.

01:49.960 --> 01:54.760
 And I'm stopping the recording.

01:54.760 --> 01:58.000
 And so in the recording, I could see quite a few things.

01:58.000 --> 02:02.720
 I could see that we have a single spike of CPU activity.

02:02.720 --> 02:04.120
 I could see this in the CPU row.

02:04.120 --> 02:06.920
 It's the row that's like whenever this row is filled,

02:06.920 --> 02:09.880
 you know that the browser is busy doing something.

02:09.880 --> 02:13.100
 And if I zoom into this spike of CPU activity

02:13.100 --> 02:15.240
 and look into the main pane, I would

02:15.240 --> 02:18.080
 see all the functions, all the things that

02:18.080 --> 02:23.800
 happened in the browser when this spike of CPU happened.

02:23.800 --> 02:25.680
 So I would zoom into this main pane,

02:25.680 --> 02:26.960
 and I would look what's happening here.

02:26.960 --> 02:29.000
 And I would see that the first thing that happened

02:29.000 --> 02:34.120
 was the key press event, because I typed into the input there.

02:34.120 --> 02:37.320
 That thing called the text input event,

02:37.320 --> 02:41.040
 that called the input event, trigger the input event.

02:41.040 --> 02:45.360
 The input event, in turn, called the dispatchDiscreteEvent

02:45.360 --> 02:46.680
 function.

02:46.680 --> 02:49.040
 And this function, if I open the summary pane,

02:49.040 --> 02:52.520
 if I look at the functional location,

02:52.520 --> 02:55.680
 I would see that this function comes from React development.

02:55.680 --> 02:58.160
 So it's a React function.

02:58.160 --> 03:00.400
 And so the dispatchDiscreteEvent function

03:00.400 --> 03:03.720
 calls discreteUpdates, which is another React function that

03:03.720 --> 03:09.060
 calls discreteUpdates$1, runWithPriority$1.

03:09.060 --> 03:11.860
 And so it calls a whole lot.

03:11.860 --> 03:16.160
 There's like a huge chain of React functions

03:16.160 --> 03:21.800
 all the way to the bottom, like a lot of levels,

03:21.800 --> 03:25.280
 all the way until we scroll all the way down

03:25.280 --> 03:28.760
 and notice functions having a different color.

03:28.760 --> 03:30.320
 And color, in this case, means just

03:30.320 --> 03:33.600
 that the function is coming from a different file.

03:33.600 --> 03:35.800
 Blue doesn't mean anything significant.

03:35.800 --> 03:37.340
 Pink doesn't mean anything significant.

03:37.340 --> 03:40.160
 It's just functions coming from different files.

03:40.160 --> 03:44.640
 And so if I scroll through this whole array of React functions

03:44.640 --> 03:48.040
 and look into what's happening here,

03:48.040 --> 03:50.760
 I would see that the functions that are getting called here

03:50.760 --> 03:54.160
 are functions like NotesList, ReactMarkdown,

03:54.160 --> 04:00.080
 ReactMarkdown, again, ReactMarkdown, a bunch of functions.

04:00.080 --> 04:02.880
 And all these functions, if I were a developer,

04:02.880 --> 04:05.600
 I would recognize all these functions,

04:05.600 --> 04:10.480
 look, they are my React components.

04:10.480 --> 04:11.960
 So here's what's happening here.

04:11.960 --> 04:14.200
 If I was to profile this a bit more,

04:14.200 --> 04:17.360
 if I was to figure out a bit more what's happening here,

04:17.360 --> 04:44.400
 I would realize these.

